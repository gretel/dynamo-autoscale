#!/usr/bin/env ruby

Encoding.default_external = Encoding::UTF_8
Encoding.default_internal = Encoding::UTF_8

require 'rubygems'
require 'commander'

require_relative '../lib/dynamo-autoscale/version'
require_relative '../lib/dynamo-autoscale/cli'

class Command
  include Commander::Methods

  def run
    program :name, 'dynamo-autoscale'
    program :version, DynamoAutoscale::VERSION
    program :description, 'CLI to manage dynamo-autoscale in a nice way'
    # default_command :help

    global_option('--log_level LEVEL', String, "Set logging level (debug, info, warn, error, fatal)") { |val| $logger_level = val }

    command :start do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Start the tool and enter the polling loop'
      c.option '-c', '--config PATH', String, 'Configuration file'
      c.option '-n', '--dry_run', 'Do not actually change the throughput values'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        # be explicit in regards to running dry
        if options.dry_run
          $dry_run = true
        else
          $dry_run = false
        end
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'check_config' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Check the YAML structure of the configuration file'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        options.skip_setup = true
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'check_ruleset' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Check the scaling ruleset defined'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        options.skip_setup = true
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'check_email' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Try to send a notification email as configured'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'lament_wastage' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Calculate using CloudWatch data what a waste of money this is (not).'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'pull_cw_data' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Save historic data from the CloudWatch API in JSON'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'test_random' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Run with random data to see what would happen if things get weird'
      # c.option '--graph', 'Output a graph'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    command 'test_simulate' do |c|
      c.syntax = "dynamo-autoscale #{c.name}"
      c.description = 'Run a simulation test to check the configuration. Requires historic data available, please use the \'pull_cw_data\' command'
      c.option '--config PATH', String, 'Configuration file'
      c.action do |args, options|
        unless options.config
          say 'option ''--config PATH'' is required'
          exit 1
        end
        DynamoAutoscale::CLI.run(c.name, options)
      end
    end

    begin
      run!
    rescue => e
      STDERR.puts "Exception:\n#{e}"
      STDERR.puts "Backtrace:\n#{e.backtrace.join("\n\t")}" unless e.backtrace.nil?
    end
  end
end

Command.new.run # if $0 == __FILE__

exit 0
