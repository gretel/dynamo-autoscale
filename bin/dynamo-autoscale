#!/usr/bin/env ruby

require 'optparse'

USAGE_PATH = File.join(File.dirname(__FILE__), '..', 'USAGE')

# This OptionParser block is here to ensure the queries to --version are
# actually fast and don't have to go through all of the Ruby requiring lark.
begin
  OptionParser.new do |opts|
    opts.on('--version', 'Prints the version of this application.') do
      require_relative '../lib/dynamo-autoscale/version'
      puts DynamoAutoscale::VERSION
      exit 0
    end

    opts.on('--help', 'Shows this documentation.') do
      puts File.read(USAGE_PATH)
      exit 0
    end
  end.parse!
rescue OptionParser::InvalidOption => e
  STDERR.puts("#{e.message}\n\n#{File.read(USAGE_PATH)}")
  exit 1
end

begin
  require_relative '../config/environment/common'
rescue RuntimeError => e
  raise e
end

# Typing out DynamoAutoscale so many times is tedious.
DA = DynamoAutoscale

if ARGV[0]
  begin
    DA.setup_from_config(ARGV[0])
  rescue DA::Error::InvalidConfigurationError => e
    STDERR.puts e.message
    exit 1
  end
elsif ARGV[0].nil?
  STDERR.puts File.read(USAGE_PATH)

  exit 1
elsif ARGV[0] and !File.exists?(ARGV[0])
  STDERR.puts "Error: The path you specified is to a file that does not exist."
  STDERR.puts
  STDERR.puts File.read(USAGE_PATH)

  exit 1
end

DA.logger.info "Ensuring tables exist in DynamoDB..."
dynamo = AWS::DynamoDB.new

DA.poller_opts[:tables].select! do |table_name|
  if dynamo.tables[table_name].exists?
    true
  else
    DA.logger.error "Table #{table_name} does not exist inside your DynamoDB."
    false
  end
end

DA.poller_class = DA::CWPoller

unless DA.config[:dry_run]
  DA.actioner_class = DA::DynamoActioner
end

DA.logger.info "Finished setup. Backdating..."
DA.poller.backdate

DA.logger.info "Starting polling loop..."
DA.poller.run
